<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\output\uart_console.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\output\uart_console.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060300: Last Updated: Fri Aug 05 10:31:55 2022
<BR><P>
<H3>Maximum Stack Usage =        280 bytes + Unknown(Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
cmd_conn &rArr; parse_addr &rArr; __0sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_int
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[8]">AoA_IqReportProcessTimerCallback</a> from aoa_service.o(i.AoA_IqReportProcessTimerCallback) referenced from aoa_service.o(i.AoA_ServiceInit)
 <LI><a href="#[0]">Reset_Handler</a> from startup_ing91800.o(.text) referenced from startup_ing91800.o(RESET)
 <LI><a href="#[2]">__scatterload</a> from init.o(.text) referenced from startup_ing91800.o(.text)
 <LI><a href="#[5]">_sbackspace</a> from _sgetc.o(.text) referenced from __0sscanf.o(.text)
 <LI><a href="#[6]">_scanf_char_input</a> from scanf_char.o(.text) referenced from scanf_char.o(.text)
 <LI><a href="#[4]">_sgetc</a> from _sgetc.o(.text) referenced from __0sscanf.o(.text)
 <LI><a href="#[a]">_sputc</a> from printf8.o(i._sputc) referenced from printf8.o(i.__0sprintf$8)
 <LI><a href="#[3]">app_main</a> from main.o(i.app_main) referenced from startup_ing91800.o(.text)
 <LI><a href="#[19]">att_read_callback</a> from profile.o(i.att_read_callback) referenced from profile.o(i.setup_profile)
 <LI><a href="#[18]">att_write_callback</a> from profile.o(i.att_write_callback) referenced from profile.o(i.setup_profile)
 <LI><a href="#[c]">cb_assertion</a> from main.o(i.cb_assertion) referenced from main.o(i.app_main)
 <LI><a href="#[b]">cb_hard_fault</a> from main.o(i.cb_hard_fault) referenced from main.o(i.app_main)
 <LI><a href="#[f]">cb_putc</a> from main.o(i.cb_putc) referenced from main.o(i.app_main)
 <LI><a href="#[11]">characteristic_discovery_callback</a> from gatt_client_util.o(i.characteristic_discovery_callback) referenced from gatt_client_util.o(i.discover_char_of_service)
 <LI><a href="#[11]">characteristic_discovery_callback</a> from gatt_client_util.o(i.characteristic_discovery_callback) referenced from gatt_client_util.o(i.service_discovery_callback)
 <LI><a href="#[1f]">cmd_conn</a> from uart_console.o(i.cmd_conn) referenced from uart_console.o(.data)
 <LI><a href="#[20]">cmd_conn_cancel</a> from uart_console.o(i.cmd_conn_cancel) referenced from uart_console.o(.data)
 <LI><a href="#[1e]">cmd_help</a> from uart_console.o(i.cmd_help) referenced 2 times from uart_console.o(.data)
 <LI><a href="#[23]">cmd_setup_8266</a> from uart_console.o(i.cmd_setup_8266) referenced from uart_console.o(.data)
 <LI><a href="#[21]">cmd_sub_char</a> from uart_console.o(i.cmd_sub_char) referenced from uart_console.o(.data)
 <LI><a href="#[22]">cmd_unsub_char</a> from uart_console.o(i.cmd_unsub_char) referenced from uart_console.o(.data)
 <LI><a href="#[12]">descriptor_discovery_callback</a> from gatt_client_util.o(i.descriptor_discovery_callback) referenced from gatt_client_util.o(i.discover_desc_of_char)
 <LI><a href="#[9]">fputc</a> from main.o(i.fputc) referenced from printf8.o(i.__0printf$8)
 <LI><a href="#[13]">free</a> from malloc.o(i.free) referenced from gatt_client_util.o(i.free_list)
 <LI><a href="#[14]">free_char</a> from gatt_client_util.o(i.free_char) referenced from gatt_client_util.o(i.free_service)
 <LI><a href="#[15]">free_service</a> from gatt_client_util.o(i.free_service) referenced from gatt_client_util.o(i.free_services)
 <LI><a href="#[1d]">gatt_client_util_dump_profile</a> from gatt_client_util.o(i.gatt_client_util_dump_profile) referenced from profile.o(i.user_packet_handler)
 <LI><a href="#[7]">isspace</a> from isspace_o.o(.text) referenced from scanf_char.o(.text)
 <LI><a href="#[1]">main</a> from startup_ing91800.o(.text) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
 <LI><a href="#[1b]">output_notification_handler</a> from profile.o(i.output_notification_handler) referenced from profile.o(i.user_msg_handler)
 <LI><a href="#[17]">print_fun</a> from profile.o(i.print_fun) referenced from profile.o(i.output_notification_handler)
 <LI><a href="#[17]">print_fun</a> from profile.o(i.print_fun) referenced from profile.o(i.user_packet_handler)
 <LI><a href="#[10]">puts</a> from puts.o(i.puts) referenced from main.o(i.cb_assertion)
 <LI><a href="#[16]">service_discovery_callback</a> from gatt_client_util.o(i.service_discovery_callback) referenced from gatt_client_util.o(i.gatt_client_util_discover_all)
 <LI><a href="#[d]">setup_profile</a> from profile.o(i.setup_profile) referenced from main.o(i.app_main)
 <LI><a href="#[4d]">trace_full_dump</a> from trace.o(i.trace_full_dump) referenced from trace.o(i.trace_full_dump)
 <LI><a href="#[e]">uart_isr</a> from main.o(i.uart_isr) referenced from main.o(i.app_main)
 <LI><a href="#[1a]">user_packet_handler</a> from profile.o(i.user_packet_handler) referenced from profile.o(i.setup_profile)
 <LI><a href="#[1c]">write_characteristic_descriptor_callback</a> from profile.o(i.write_characteristic_descriptor_callback) referenced from profile.o(i.user_msg_handler)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[77]"></a>att_server_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.m(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_profile
</UL>

<P><STRONG><a name="[79]"></a>att_server_register_packet_handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.m(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_profile
</UL>

<P><STRONG><a name="[8d]"></a>att_set_db</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.m(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_packet_handler
</UL>

<P><STRONG><a name="[4b]"></a>btstack_push_user_msg</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.m(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;unsub_to_char
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sub_to_char
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;conn_to_slave
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cancel_create_conn
</UL>

<P><STRONG><a name="[80]"></a>gap_create_connection_cancel</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.m(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_msg_handler
</UL>

<P><STRONG><a name="[90]"></a>gap_disconnect</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.m(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_characteristic_descriptor_callback
</UL>

<P><STRONG><a name="[7f]"></a>gap_ext_create_connection</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.m(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_msg_handler
</UL>

<P><STRONG><a name="[8c]"></a>gap_read_remote_info</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.m(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_packet_handler
</UL>

<P><STRONG><a name="[8f]"></a>gap_read_remote_used_features</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.m(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_packet_handler
</UL>

<P><STRONG><a name="[88]"></a>gap_set_adv_set_random_addr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.m(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_packet_handler
</UL>

<P><STRONG><a name="[5f]"></a>gap_set_ext_adv_data</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.m(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_set_data
</UL>

<P><STRONG><a name="[7e]"></a>gap_set_ext_adv_enable</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.m(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_msg_handler
</UL>

<P><STRONG><a name="[89]"></a>gap_set_ext_adv_para</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.m(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_packet_handler
</UL>

<P><STRONG><a name="[8a]"></a>gap_set_ext_scan_response_data</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.m(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_packet_handler
</UL>

<P><STRONG><a name="[87]"></a>gap_set_random_device_address</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.m(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_packet_handler
</UL>

<P><STRONG><a name="[5d]"></a>gatt_client_discover_characteristic_descriptors</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.m(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;discover_desc_of_char
</UL>

<P><STRONG><a name="[5c]"></a>gatt_client_discover_characteristics_for_service</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.m(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;service_discovery_callback
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;discover_char_of_service
</UL>

<P><STRONG><a name="[66]"></a>gatt_client_discover_primary_services</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.m(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_util_discover_all
</UL>

<P><STRONG><a name="[82]"></a>gatt_client_listen_for_characteristic_value_updates</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.m(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_msg_handler
</UL>

<P><STRONG><a name="[7a]"></a>gatt_client_register_handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.m(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_profile
</UL>

<P><STRONG><a name="[83]"></a>gatt_client_write_characteristic_descriptor_using_descriptor_handle</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.m(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_msg_handler
</UL>

<P><STRONG><a name="[78]"></a>hci_add_event_handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.m(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_profile
</UL>

<P><STRONG><a name="[86]"></a>platform_config</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.m(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_packet_handler
</UL>

<P><STRONG><a name="[8b]"></a>platform_get_us_time</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.m(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_packet_handler
</UL>

<P><STRONG><a name="[4c]"></a>platform_printf</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.m(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_util_dump_profile
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_characteristic_descriptor_callback
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_packet_handler
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_msg_handler
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_features
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;output_notification_handler
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cb_hard_fault
<LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cb_assertion
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_util_print_uuid
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_util_print_properties
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;service_discovery_callback
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;discover_char_of_service
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;descriptor_discovery_callback
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;characteristic_discovery_callback
</UL>

<P><STRONG><a name="[64]"></a>platform_raise_assertion</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.m(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_util_discover_all
</UL>

<P><STRONG><a name="[46]"></a>platform_set_evt_callback</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.m(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_main
</UL>

<P><STRONG><a name="[47]"></a>platform_set_irq_callback</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.m(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_main
</UL>

<P><STRONG><a name="[6c]"></a>uuid_has_bluetooth_prefix</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.m(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_util_print_uuid
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_sig_uuid
</UL>

<P><STRONG><a name="[84]"></a>xTaskGetTickCount</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.m(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_msg_handler
</UL>

<P><STRONG><a name="[3c]"></a>xTimerCreate</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.m(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AoA_ServiceInit
</UL>

<P><STRONG><a name="[85]"></a>xTimerGenericCommand</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.m(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_msg_handler
</UL>

<P><STRONG><a name="[24]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))

<P><STRONG><a name="[91]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[25]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[26]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[92]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[93]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[94]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[95]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[96]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, startup_ing91800.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_ing91800.o(RESET)
</UL>
<P><STRONG><a name="[1]"></a>main</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, startup_ing91800.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[2]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ing91800.o(.text)
</UL>
<P><STRONG><a name="[97]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[27]"></a>__aeabi_uldivmod</STRONG> (Thumb, 98 bytes, Stack size 40 bytes, uldiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_packet_handler
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[2a]"></a>__rt_ctype_table</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ctype_o.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_hex_table
<LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isspace
</UL>

<P><STRONG><a name="[7]"></a>isspace</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, isspace_o.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = isspace
</UL>
<BR>[Calls]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_ctype_table
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scanf_char.o(.text)
</UL>
<P><STRONG><a name="[37]"></a>__aeabi_memcpy</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, memcpya.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hex_dump
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AoA_CheckNewDevice
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AoA_SetAddrStrMapByUart
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;append_data
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;service_discovery_callback
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;descriptor_discovery_callback
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;characteristic_discovery_callback
</UL>

<P><STRONG><a name="[98]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[99]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[2c]"></a>__aeabi_memset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_hex_table
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset$wrapper
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[9a]"></a>__aeabi_memset4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[9b]"></a>__aeabi_memset8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[2b]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AoA_IqReportProcessTimerCallback
</UL>

<P><STRONG><a name="[65]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_util_discover_all
</UL>

<P><STRONG><a name="[9c]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[2d]"></a>_memset$wrapper</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[73]"></a>strcat</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, strcat.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;output_notification_handler
</UL>

<P><STRONG><a name="[54]"></a>strlen</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, strlen.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;parse_addr
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_command
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_unsub_char
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_sub_char
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_help
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;output_notification_handler
</UL>

<P><STRONG><a name="[36]"></a>memcmp</STRONG> (Thumb, 26 bytes, Stack size 12 bytes, memcmp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AoA_IqReportProcessTimerCallback
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AoA_CheckNewDevice
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AoA_SetAddrStrMapByUart
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_new_advertiser
</UL>

<P><STRONG><a name="[72]"></a>strcpy</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, strcpy.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;output_notification_handler
</UL>

<P><STRONG><a name="[2e]"></a>strcasecmp</STRONG> (Thumb, 42 bytes, Stack size 24 bytes, strcasecmp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = strcasecmp
</UL>
<BR>[Calls]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tolower
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_command
</UL>

<P><STRONG><a name="[30]"></a>__0sscanf</STRONG> (Thumb, 48 bytes, Stack size 72 bytes, __0sscanf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = __0sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_int
</UL>
<BR>[Calls]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__vfscanf_char
</UL>
<BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;parse_addr
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_unsub_char
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_sub_char
</UL>

<P><STRONG><a name="[32]"></a>_scanf_int</STRONG> (Thumb, 332 bytes, Stack size 56 bytes, _scanf_int.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _scanf_int
</UL>
<BR>[Calls]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_chval
</UL>
<BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__vfscanf
</UL>

<P><STRONG><a name="[29]"></a>__aeabi_llsl</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, llshl.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>

<P><STRONG><a name="[9d]"></a>_ll_shift_l</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[28]"></a>__aeabi_llsr</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, llushr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>

<P><STRONG><a name="[9e]"></a>_ll_ushift_r</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llushr.o(.text), UNUSED)

<P><STRONG><a name="[2f]"></a>tolower</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, tolower.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcasecmp
</UL>

<P><STRONG><a name="[33]"></a>_chval</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, _chval.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_int
</UL>

<P><STRONG><a name="[31]"></a>__vfscanf_char</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, scanf_char.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = __vfscanf_char &rArr; __vfscanf &rArr; _scanf_int
</UL>
<BR>[Calls]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__vfscanf
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sscanf
</UL>

<P><STRONG><a name="[4]"></a>_sgetc</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, _sgetc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> __0sscanf.o(.text)
</UL>
<P><STRONG><a name="[5]"></a>_sbackspace</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, _sgetc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> __0sscanf.o(.text)
</UL>
<P><STRONG><a name="[34]"></a>__vfscanf</STRONG> (Thumb, 808 bytes, Stack size 88 bytes, _scanf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = __vfscanf &rArr; _scanf_int
</UL>
<BR>[Calls]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_int
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__vfscanf_char
</UL>

<P><STRONG><a name="[3a]"></a>AoA_MQTT_Setup_8266</STRONG> (Thumb, 102 bytes, Stack size 8 bytes, aoa_service.o(i.AoA_MQTT_Setup_8266))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = AoA_MQTT_Setup_8266 &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_setup_8266
</UL>

<P><STRONG><a name="[3b]"></a>AoA_ServiceInit</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, aoa_service.o(i.AoA_ServiceInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = AoA_ServiceInit
</UL>
<BR>[Calls]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerCreate
</UL>
<BR>[Called By]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_profile
</UL>

<P><STRONG><a name="[3d]"></a>AoA_SetAddrStrMapByUart</STRONG> (Thumb, 126 bytes, Stack size 56 bytes, aoa_service.o(i.AoA_SetAddrStrMapByUart))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = AoA_SetAddrStrMapByUart &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_conn
</UL>

<P><STRONG><a name="[39]"></a>Delay</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, aoa_service.o(i.Delay))
<BR><BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AoA_IqReportProcessTimerCallback
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AoA_MQTT_Setup_8266
</UL>

<P><STRONG><a name="[4f]"></a>UART_SendData</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, peripheral_uart.o(i.UART_SendData))
<BR><BR>[Called By]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cb_putc
</UL>

<P><STRONG><a name="[3f]"></a>__0printf$8</STRONG> (Thumb, 22 bytes, Stack size 24 bytes, printf8.o(i.__0printf$8), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[9f]"></a>__1printf$8</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf8.o(i.__0printf$8), UNUSED)

<P><STRONG><a name="[38]"></a>__2printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf8.o(i.__0printf$8))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AoA_IqReportProcessTimerCallback
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AoA_CheckNewDevice
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AoA_SetAddrStrMapByUart
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AoA_MQTT_Setup_8266
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_fun
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_msg_handler
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_profile
<LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_main
</UL>

<P><STRONG><a name="[41]"></a>__0sprintf$8</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, printf8.o(i.__0sprintf$8), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sputc
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[a0]"></a>__1sprintf$8</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf8.o(i.__0sprintf$8), UNUSED)

<P><STRONG><a name="[3e]"></a>__2sprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf8.o(i.__0sprintf$8))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AoA_SetAddrStrMapByUart
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_full_dump
</UL>

<P><STRONG><a name="[a1]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[a2]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[a3]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[45]"></a>apUART_BaudRateSet</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, peripheral_uart.o(i.apUART_BaudRateSet))
<BR><BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apUART_Initialize
</UL>

<P><STRONG><a name="[7b]"></a>apUART_Check_RXFIFO_EMPTY</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, peripheral_uart.o(i.apUART_Check_RXFIFO_EMPTY))
<BR><BR>[Called By]<UL><LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_isr
</UL>

<P><STRONG><a name="[4e]"></a>apUART_Check_TXFIFO_FULL</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, peripheral_uart.o(i.apUART_Check_TXFIFO_FULL))
<BR><BR>[Called By]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cb_putc
</UL>

<P><STRONG><a name="[7c]"></a>apUART_Get_all_raw_int_stat</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, peripheral_uart.o(i.apUART_Get_all_raw_int_stat))
<BR><BR>[Called By]<UL><LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_isr
</UL>

<P><STRONG><a name="[44]"></a>apUART_Initialize</STRONG> (Thumb, 112 bytes, Stack size 16 bytes, peripheral_uart.o(i.apUART_Initialize))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = apUART_Initialize
</UL>
<BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apUART_BaudRateSet
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_uart
</UL>

<P><STRONG><a name="[3]"></a>app_main</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, main.o(i.app_main))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = app_main &rArr; setup_peripherals &rArr; config_uart &rArr; apUART_Initialize
</UL>
<BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_set_irq_callback
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_set_evt_callback
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_peripherals
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ing91800.o(.text)
</UL>
<P><STRONG><a name="[4a]"></a>cancel_create_conn</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, profile.o(i.cancel_create_conn))
<BR><BR>[Calls]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btstack_push_user_msg
</UL>
<BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_conn_cancel
</UL>

<P><STRONG><a name="[c]"></a>cb_assertion</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, main.o(i.cb_assertion))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = cb_assertion &rArr; trace_full_dump &rArr; hex_dump &rArr; hex_dump_line
</UL>
<BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_full_dump
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(i.app_main)
</UL>
<P><STRONG><a name="[b]"></a>cb_hard_fault</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, main.o(i.cb_hard_fault))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = cb_hard_fault
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(i.app_main)
</UL>
<P><STRONG><a name="[f]"></a>cb_putc</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, main.o(i.cb_putc))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = cb_putc
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apUART_Check_TXFIFO_FULL
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SendData
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(i.app_main)
</UL>
<P><STRONG><a name="[1f]"></a>cmd_conn</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, uart_console.o(i.cmd_conn))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = cmd_conn &rArr; parse_addr &rArr; __0sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_int
</UL>
<BR>[Calls]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AoA_SetAddrStrMapByUart
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;parse_addr
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;conn_to_slave
</UL>
<BR>[Address Reference Count : 1]<UL><LI> uart_console.o(.data)
</UL>
<P><STRONG><a name="[20]"></a>cmd_conn_cancel</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, uart_console.o(i.cmd_conn_cancel))
<BR><BR>[Calls]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cancel_create_conn
</UL>
<BR>[Address Reference Count : 1]<UL><LI> uart_console.o(.data)
</UL>
<P><STRONG><a name="[1e]"></a>cmd_help</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, uart_console.o(i.cmd_help))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = cmd_help &rArr; tx_data &rArr; puts &rArr; fputc &rArr; cb_putc
</UL>
<BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tx_data
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_command
</UL>
<BR>[Address Reference Count : 1]<UL><LI> uart_console.o(.data)
</UL>
<P><STRONG><a name="[23]"></a>cmd_setup_8266</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, uart_console.o(i.cmd_setup_8266))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = cmd_setup_8266 &rArr; AoA_MQTT_Setup_8266 &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AoA_MQTT_Setup_8266
</UL>
<BR>[Address Reference Count : 1]<UL><LI> uart_console.o(.data)
</UL>
<P><STRONG><a name="[21]"></a>cmd_sub_char</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, uart_console.o(i.cmd_sub_char))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = cmd_sub_char &rArr; __0sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_int
</UL>
<BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tx_data
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sub_to_char
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sscanf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> uart_console.o(.data)
</UL>
<P><STRONG><a name="[22]"></a>cmd_unsub_char</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, uart_console.o(i.cmd_unsub_char))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = cmd_unsub_char &rArr; __0sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_int
</UL>
<BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tx_data
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;unsub_to_char
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sscanf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> uart_console.o(.data)
</UL>
<P><STRONG><a name="[58]"></a>config_uart</STRONG> (Thumb, 72 bytes, Stack size 24 bytes, main.o(i.config_uart))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = config_uart &rArr; apUART_Initialize
</UL>
<BR>[Calls]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apUART_Initialize
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_peripherals
</UL>

<P><STRONG><a name="[53]"></a>conn_to_slave</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, profile.o(i.conn_to_slave))
<BR><BR>[Calls]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btstack_push_user_msg
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_conn
</UL>

<P><STRONG><a name="[59]"></a>console_rx_data</STRONG> (Thumb, 102 bytes, Stack size 16 bytes, uart_console.o(i.console_rx_data))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = console_rx_data &rArr; handle_command &rArr; cmd_help &rArr; tx_data &rArr; puts &rArr; fputc &rArr; cb_putc
</UL>
<BR>[Calls]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_command
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;append_data
</UL>
<BR>[Called By]<UL><LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_isr
</UL>

<P><STRONG><a name="[5e]"></a>do_set_data</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, profile.o(i.do_set_data))
<BR><BR>[Calls]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_set_ext_adv_data
</UL>
<BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_packet_handler
</UL>

<P><STRONG><a name="[9]"></a>fputc</STRONG> (Thumb, 14 bytes, Stack size 16 bytes, main.o(i.fputc))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = fputc &rArr; cb_putc
</UL>
<BR>[Calls]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cb_putc
</UL>
<BR>[Called By]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;puts
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printf8.o(i.__0printf$8)
</UL>
<P><STRONG><a name="[13]"></a>free</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, malloc.o(i.free))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = free
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_util_free
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free_service
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free_char
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gatt_client_util.o(i.free_list)
</UL>
<P><STRONG><a name="[62]"></a>free_services</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, gatt_client_util.o(i.free_services))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = free_services &rArr; list_for_each
</UL>
<BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_for_each
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_util_free
</UL>

<P><STRONG><a name="[63]"></a>gatt_client_util_discover_all</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, gatt_client_util.o(i.gatt_client_util_discover_all))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = gatt_client_util_discover_all &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_raise_assertion
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_discover_primary_services
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_packet_handler
</UL>

<P><STRONG><a name="[1d]"></a>gatt_client_util_dump_profile</STRONG> (Thumb, 134 bytes, Stack size 16 bytes, gatt_client_util.o(i.gatt_client_util_dump_profile))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = gatt_client_util_dump_profile &rArr; gatt_client_util_print_uuid
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_printf
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_util_print_uuid
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_util_print_properties
</UL>
<BR>[Address Reference Count : 1]<UL><LI> profile.o(i.user_packet_handler)
</UL>
<P><STRONG><a name="[81]"></a>gatt_client_util_find_char</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, gatt_client_util.o(i.gatt_client_util_find_char))
<BR><BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_msg_handler
</UL>

<P><STRONG><a name="[69]"></a>gatt_client_util_find_config_desc</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, gatt_client_util.o(i.gatt_client_util_find_config_desc))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = gatt_client_util_find_config_desc &rArr; is_sig_uuid
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_sig_uuid
</UL>
<BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_msg_handler
</UL>

<P><STRONG><a name="[6b]"></a>gatt_client_util_free</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, gatt_client_util.o(i.gatt_client_util_free))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = gatt_client_util_free &rArr; free_services &rArr; list_for_each
</UL>
<BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free_services
<LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>
<BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_packet_handler
</UL>

<P><STRONG><a name="[68]"></a>gatt_client_util_print_properties</STRONG> (Thumb, 102 bytes, Stack size 8 bytes, gatt_client_util.o(i.gatt_client_util_print_properties))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gatt_client_util_print_properties
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_util_dump_profile
</UL>

<P><STRONG><a name="[67]"></a>gatt_client_util_print_uuid</STRONG> (Thumb, 102 bytes, Stack size 64 bytes, gatt_client_util.o(i.gatt_client_util_print_uuid))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = gatt_client_util_print_uuid
</UL>
<BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uuid_has_bluetooth_prefix
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_util_dump_profile
</UL>

<P><STRONG><a name="[5a]"></a>handle_command</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, uart_console.o(i.handle_command))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = handle_command &rArr; cmd_help &rArr; tx_data &rArr; puts &rArr; fputc &rArr; cb_putc
</UL>
<BR>[Calls]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_help
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tx_data
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcasecmp
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;console_rx_data
</UL>

<P><STRONG><a name="[70]"></a>is_new_advertiser</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, profile.o(i.is_new_advertiser))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = is_new_advertiser &rArr; memcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_packet_handler
</UL>

<P><STRONG><a name="[50]"></a>malloc</STRONG> (Thumb, 92 bytes, Stack size 20 bytes, malloc.o(i.malloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_util_discover_all
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_msg_handler
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;service_discovery_callback
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;descriptor_discovery_callback
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;characteristic_discovery_callback
</UL>

<P><STRONG><a name="[52]"></a>parse_addr</STRONG> (Thumb, 84 bytes, Stack size 56 bytes, uart_console.o(i.parse_addr))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = parse_addr &rArr; __0sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_int
</UL>
<BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tx_data
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sscanf
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_conn
</UL>

<P><STRONG><a name="[17]"></a>print_fun</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, profile.o(i.print_fun))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = print_fun &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 2]<UL><LI> profile.o(i.output_notification_handler)
<LI> profile.o(i.user_packet_handler)
</UL>
<P><STRONG><a name="[71]"></a>print_hex_table</STRONG> (Thumb, 176 bytes, Stack size 56 bytes, str_util.o(i.print_hex_table))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = print_hex_table
</UL>
<BR>[Calls]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_ctype_table
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nibble_to_char
</UL>
<BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_packet_handler
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;output_notification_handler
</UL>

<P><STRONG><a name="[10]"></a>puts</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, puts.o(i.puts))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = puts &rArr; fputc &rArr; cb_putc
</UL>
<BR>[Calls]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
</UL>
<BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tx_data
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(i.cb_assertion)
</UL>
<P><STRONG><a name="[48]"></a>setup_peripherals</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, main.o(i.setup_peripherals))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = setup_peripherals &rArr; config_uart &rArr; apUART_Initialize
</UL>
<BR>[Calls]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_uart
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_main
</UL>

<P><STRONG><a name="[d]"></a>setup_profile</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, profile.o(i.setup_profile))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = setup_profile &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_add_event_handler
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_register_handler
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;att_server_register_packet_handler
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;att_server_init
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AoA_ServiceInit
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(i.app_main)
</UL>
<P><STRONG><a name="[56]"></a>sub_to_char</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, profile.o(i.sub_to_char))
<BR><BR>[Calls]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btstack_push_user_msg
</UL>
<BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_sub_char
</UL>

<P><STRONG><a name="[4d]"></a>trace_full_dump</STRONG> (Thumb, 110 bytes, Stack size 16 bytes, trace.o(i.trace_full_dump))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = trace_full_dump &rArr; hex_dump &rArr; hex_dump_line
</UL>
<BR>[Calls]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hex_dump
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cb_assertion
</UL>
<BR>[Address Reference Count : 1]<UL><LI> trace.o(i.trace_full_dump)
</UL>
<P><STRONG><a name="[e]"></a>uart_isr</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, main.o(i.uart_isr))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = uart_isr &rArr; console_rx_data &rArr; handle_command &rArr; cmd_help &rArr; tx_data &rArr; puts &rArr; fputc &rArr; cb_putc
</UL>
<BR>[Calls]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;console_rx_data
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apUART_Get_all_raw_int_stat
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apUART_Check_RXFIFO_EMPTY
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(i.app_main)
</UL>
<P><STRONG><a name="[57]"></a>unsub_to_char</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, profile.o(i.unsub_to_char))
<BR><BR>[Calls]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btstack_push_user_msg
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_unsub_char
</UL>

<P><STRONG><a name="[1c]"></a>write_characteristic_descriptor_callback</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, profile.o(i.write_characteristic_descriptor_callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = write_characteristic_descriptor_callback
</UL>
<BR>[Calls]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_disconnect
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> profile.o(i.user_msg_handler)
</UL><P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[19]"></a>att_read_callback</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, profile.o(i.att_read_callback))
<BR>[Address Reference Count : 1]<UL><LI> profile.o(i.setup_profile)
</UL>
<P><STRONG><a name="[18]"></a>att_write_callback</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, profile.o(i.att_write_callback))
<BR>[Address Reference Count : 1]<UL><LI> profile.o(i.setup_profile)
</UL>
<P><STRONG><a name="[8e]"></a>decode_version</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, profile.o(i.decode_version))
<BR><BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_packet_handler
</UL>

<P><STRONG><a name="[1b]"></a>output_notification_handler</STRONG> (Thumb, 140 bytes, Stack size 16 bytes, profile.o(i.output_notification_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = output_notification_handler &rArr; print_hex_table
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_hex_table
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_printf
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
</UL>
<BR>[Address Reference Count : 1]<UL><LI> profile.o(i.user_msg_handler)
</UL>
<P><STRONG><a name="[74]"></a>print_features</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, profile.o(i.print_features))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = print_features
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_packet_handler
</UL>

<P><STRONG><a name="[7d]"></a>user_msg_handler</STRONG> (Thumb, 292 bytes, Stack size 40 bytes, profile.o(i.user_msg_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = user_msg_handler &rArr; gatt_client_util_find_config_desc &rArr; is_sig_uuid
</UL>
<BR>[Calls]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerGenericCommand
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetTickCount
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_write_characteristic_descriptor_using_descriptor_handle
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_util_find_config_desc
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_util_find_char
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_listen_for_characteristic_value_updates
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_set_ext_adv_enable
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_ext_create_connection
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_create_connection_cancel
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_printf
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_packet_handler
</UL>

<P><STRONG><a name="[1a]"></a>user_packet_handler</STRONG> (Thumb, 668 bytes, Stack size 64 bytes, profile.o(i.user_packet_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = user_packet_handler &rArr; user_msg_handler &rArr; gatt_client_util_find_config_desc &rArr; is_sig_uuid
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_hex_table
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_get_us_time
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_config
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_util_free
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_util_discover_all
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_set_random_device_address
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_set_ext_scan_response_data
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_set_ext_adv_para
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_set_adv_set_random_addr
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_read_remote_used_features
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_read_remote_info
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;att_set_db
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_new_advertiser
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_set_data
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_msg_handler
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_features
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decode_version
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_printf
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>
<BR>[Address Reference Count : 1]<UL><LI> profile.o(i.setup_profile)
</UL>
<P><STRONG><a name="[49]"></a>append_data</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, uart_console.o(i.append_data))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = append_data
</UL>
<BR>[Calls]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tx_data
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;console_rx_data
</UL>

<P><STRONG><a name="[55]"></a>tx_data</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, uart_console.o(i.tx_data))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = tx_data &rArr; puts &rArr; fputc &rArr; cb_putc
</UL>
<BR>[Calls]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;append_data
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;puts
</UL>
<BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;parse_addr
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_command
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_unsub_char
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_sub_char
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_help
</UL>

<P><STRONG><a name="[35]"></a>AoA_CheckNewDevice</STRONG> (Thumb, 102 bytes, Stack size 16 bytes, aoa_service.o(i.AoA_CheckNewDevice))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = AoA_CheckNewDevice &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AoA_IqReportProcessTimerCallback
</UL>

<P><STRONG><a name="[8]"></a>AoA_IqReportProcessTimerCallback</STRONG> (Thumb, 134 bytes, Stack size 24 bytes, aoa_service.o(i.AoA_IqReportProcessTimerCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = AoA_IqReportProcessTimerCallback &rArr; AoA_CheckNewDevice &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AoA_CheckNewDevice
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> aoa_service.o(i.AoA_ServiceInit)
</UL>
<P><STRONG><a name="[6d]"></a>hex_dump</STRONG> (Thumb, 106 bytes, Stack size 32 bytes, trace.o(i.hex_dump))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = hex_dump &rArr; hex_dump_line
</UL>
<BR>[Calls]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hex_dump_line
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_full_dump
</UL>

<P><STRONG><a name="[6e]"></a>hex_dump_line</STRONG> (Thumb, 96 bytes, Stack size 32 bytes, trace.o(i.hex_dump_line))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = hex_dump_line
</UL>
<BR>[Calls]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nibble_to_char
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hex_dump
</UL>

<P><STRONG><a name="[6f]"></a>nibble_to_char</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, trace.o(i.nibble_to_char))
<BR><BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hex_dump_line
</UL>

<P><STRONG><a name="[75]"></a>nibble_to_char</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, str_util.o(i.nibble_to_char))
<BR><BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_hex_table
</UL>

<P><STRONG><a name="[11]"></a>characteristic_discovery_callback</STRONG> (Thumb, 136 bytes, Stack size 24 bytes, gatt_client_util.o(i.characteristic_discovery_callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = characteristic_discovery_callback &rArr; discover_desc_of_char &rArr; discover_char_of_service
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_printf
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;discover_desc_of_char
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>
<BR>[Address Reference Count : 2]<UL><LI> gatt_client_util.o(i.discover_char_of_service)
<LI> gatt_client_util.o(i.service_discovery_callback)
</UL>
<P><STRONG><a name="[12]"></a>descriptor_discovery_callback</STRONG> (Thumb, 150 bytes, Stack size 16 bytes, gatt_client_util.o(i.descriptor_discovery_callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = descriptor_discovery_callback &rArr; discover_desc_of_char &rArr; discover_char_of_service
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_printf
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;discover_desc_of_char
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;discover_char_of_service
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gatt_client_util.o(i.discover_desc_of_char)
</UL>
<P><STRONG><a name="[5b]"></a>discover_char_of_service</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, gatt_client_util.o(i.discover_char_of_service))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = discover_char_of_service
</UL>
<BR>[Calls]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_discover_characteristics_for_service
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;discover_desc_of_char
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;descriptor_discovery_callback
</UL>

<P><STRONG><a name="[51]"></a>discover_desc_of_char</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, gatt_client_util.o(i.discover_desc_of_char))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = discover_desc_of_char &rArr; discover_char_of_service
</UL>
<BR>[Calls]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_discover_characteristic_descriptors
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;discover_char_of_service
</UL>
<BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;descriptor_discovery_callback
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;characteristic_discovery_callback
</UL>

<P><STRONG><a name="[14]"></a>free_char</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, gatt_client_util.o(i.free_char))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = free_char &rArr; free_list &rArr; list_for_each
</UL>
<BR>[Calls]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free_list
<LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gatt_client_util.o(i.free_service)
</UL>
<P><STRONG><a name="[60]"></a>free_list</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gatt_client_util.o(i.free_list))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = free_list &rArr; list_for_each
</UL>
<BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_for_each
</UL>
<BR>[Called By]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free_char
</UL>

<P><STRONG><a name="[15]"></a>free_service</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, gatt_client_util.o(i.free_service))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = free_service &rArr; list_for_each
</UL>
<BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_for_each
<LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gatt_client_util.o(i.free_services)
</UL>
<P><STRONG><a name="[76]"></a>get_last_service</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, gatt_client_util.o(i.get_last_service))
<BR><BR>[Called By]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;service_discovery_callback
</UL>

<P><STRONG><a name="[6a]"></a>is_sig_uuid</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, gatt_client_util.o(i.is_sig_uuid))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = is_sig_uuid
</UL>
<BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uuid_has_bluetooth_prefix
</UL>
<BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_util_find_config_desc
</UL>

<P><STRONG><a name="[61]"></a>list_for_each</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, gatt_client_util.o(i.list_for_each))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = list_for_each
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free_services
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free_service
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free_list
</UL>

<P><STRONG><a name="[16]"></a>service_discovery_callback</STRONG> (Thumb, 138 bytes, Stack size 24 bytes, gatt_client_util.o(i.service_discovery_callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = service_discovery_callback &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_discover_characteristics_for_service
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_printf
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_last_service
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gatt_client_util.o(i.gatt_client_util_discover_all)
</UL>
<P><STRONG><a name="[40]"></a>_printf_core</STRONG> (Thumb, 996 bytes, Stack size 104 bytes, printf8.o(i._printf_core), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sprintf$8
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0printf$8
</UL>

<P><STRONG><a name="[43]"></a>_printf_post_padding</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, printf8.o(i._printf_post_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[42]"></a>_printf_pre_padding</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, printf8.o(i._printf_pre_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[a]"></a>_sputc</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, printf8.o(i._sputc))
<BR><BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sprintf$8
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printf8.o(i.__0sprintf$8)
</UL>
<P><STRONG><a name="[6]"></a>_scanf_char_input</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, scanf_char.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> scanf_char.o(.text)
</UL><P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
